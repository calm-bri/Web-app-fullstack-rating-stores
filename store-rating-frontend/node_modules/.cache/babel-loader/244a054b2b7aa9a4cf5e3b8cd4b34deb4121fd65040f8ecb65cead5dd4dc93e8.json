{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignment_Project_App\\\\Assignment_Roxiler\\\\store-rating-frontend\\\\src\\\\pages\\\\Stores\\\\StoreList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../../api/api\";\nimport StoreCard from \"../../components/StoreCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreList = () => {\n  _s();\n  const [stores, setStores] = useState([]);\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const res = await api.get(\"/stores\");\n        setStores(res.data.data || []);\n      } catch (err) {\n        console.error(err);\n        setStores([]);\n      }\n    };\n    fetchStores();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"store-list\",\n      children: stores.map(store => /*#__PURE__*/_jsxDEV(StoreCard, {\n        store: store\n      }, store.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreList, \"9eWA3iE2Dz5ReR9eY7oAKBm8LZY=\");\n_c = StoreList;\nexport default StoreList;\nvar _c;\n$RefreshReg$(_c, \"StoreList\");","map":{"version":3,"names":["React","useEffect","useState","api","StoreCard","jsxDEV","_jsxDEV","StoreList","_s","stores","setStores","fetchStores","res","get","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","store","id","_c","$RefreshReg$"],"sources":["C:/Assignment_Project_App/Assignment_Roxiler/store-rating-frontend/src/pages/Stores/StoreList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../api/api\";\r\nimport StoreCard from \"../../components/StoreCard\";\r\n\r\nconst StoreList = () => {\r\n  const [stores, setStores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchStores = async () => {\r\n      try {\r\n        const res = await api.get(\"/stores\");\r\n        setStores(res.data.data || []);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setStores([]);\r\n      }\r\n    };\r\n    fetchStores();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Stores</h2>\r\n      <div className=\"store-list\">\r\n        {stores.map((store) => (\r\n          <StoreCard key={store.id} store={store} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,eAAe;AAC/B,OAAOC,SAAS,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,SAAS,CAAC;QACpCH,SAAS,CAACE,GAAG,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC;MAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClBL,SAAS,CAAC,EAAE,CAAC;MACf;IACF,CAAC;IACDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfhB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBT,MAAM,CAACe,GAAG,CAAEC,KAAK,iBAChBnB,OAAA,CAACF,SAAS;QAAgBqB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CA1BID,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}