{"ast":null,"code":"import { normalizeResponse } from \"../../utils/normalizeResponse\";\nuseEffect(() => {\n  const fetchData = async () => {\n    try {\n      const [storesRes, ratingsRes] = await Promise.all([api.get(\"/stores/admin\"), api.get(\"/ratings/admin\")]);\n      setStores(normalizeResponse(storesRes));\n      setRatings(normalizeResponse(ratingsRes));\n    } catch (error) {\n      console.error(\"Error fetching admin data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  fetchData();\n}, []);","map":{"version":3,"names":["normalizeResponse","useEffect","fetchData","storesRes","ratingsRes","Promise","all","api","get","setStores","setRatings","error","console","setLoading"],"sources":["C:/Assignment_Project_App/Assignment_Roxiler/store-rating-frontend/src/pages/Dashboard/AdminDashboard.js"],"sourcesContent":["import { normalizeResponse } from \"../../utils/normalizeResponse\";\r\n\r\nuseEffect(() => {\r\n  const fetchData = async () => {\r\n    try {\r\n      const [storesRes, ratingsRes] = await Promise.all([\r\n        api.get(\"/stores/admin\"),\r\n        api.get(\"/ratings/admin\"),\r\n      ]);\r\n\r\n      setStores(normalizeResponse(storesRes));\r\n      setRatings(normalizeResponse(ratingsRes));\r\n    } catch (error) {\r\n      console.error(\"Error fetching admin data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  fetchData();\r\n}, []);\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,+BAA+B;AAEjEC,SAAS,CAAC,MAAM;EACd,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChDC,GAAG,CAACC,GAAG,CAAC,eAAe,CAAC,EACxBD,GAAG,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC1B,CAAC;MAEFC,SAAS,CAACT,iBAAiB,CAACG,SAAS,CAAC,CAAC;MACvCO,UAAU,CAACV,iBAAiB,CAACI,UAAU,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDX,SAAS,CAAC,CAAC;AACb,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}