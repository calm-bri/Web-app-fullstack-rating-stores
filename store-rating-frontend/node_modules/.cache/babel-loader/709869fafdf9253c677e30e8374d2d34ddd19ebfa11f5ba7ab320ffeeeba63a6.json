{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignment_Project_App\\\\Assignment_Roxiler\\\\store-rating-frontend\\\\src\\\\pages\\\\Dashboard\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../../api/api\";\nimport AnalyticsCard from \"../../components/AnalyticsCard\";\nimport RatingList from \"../../components/RatingList\";\nimport StoreList from \"../../components/StoreList\";\nimport StoreModal from \"../../components/StoreModal\";\nimport RatingModal from \"../../components/RatingModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [stats, setStats] = useState({\n    users: 0,\n    ratings: 0,\n    avgRating: 0\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Store modal state\n  const [editingStore, setEditingStore] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n\n  // Rating modal state\n  const [ratingStore, setRatingStore] = useState(null);\n  const [rating, setRating] = useState(5);\n  const [comment, setComment] = useState(\"\");\n  const [isUpdatingRating, setIsUpdatingRating] = useState(false);\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const res = await api.get(\"/dashboard/admin/stats\");\n        setStats(res.data.data || {\n          users: 0,\n          ratings: 0,\n          avgRating: 0\n        });\n      } catch (err) {\n        console.error(\"Error fetching admin stats:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStats();\n  }, []);\n\n  // Store handlers\n  const handleEditStore = store => {\n    setEditingStore(store);\n    setName(store.name || \"\");\n    setEmail(store.email || \"\");\n    setAddress(store.address || \"\");\n  };\n  const handleSaveStore = async () => {\n    try {\n      await api.put(`/stores/admin/${editingStore.id}`, {\n        name,\n        email,\n        address\n      });\n      setEditingStore(null);\n      // Optionally refresh stats or store list here\n    } catch (err) {\n      console.error(\"Error updating store:\", err);\n      alert(\"Failed to update store. Please try again.\");\n    }\n  };\n\n  // Rating handlers\n  const handleRateStore = store => {\n    setRatingStore(store);\n    setRating(5);\n    setComment(\"\");\n    setIsUpdatingRating(false);\n  };\n  const handleSubmitRating = async () => {\n    try {\n      if (isUpdatingRating) {\n        // Implement update rating logic if needed\n      } else {\n        await api.post(\"/ratings\", {\n          storeId: ratingStore.id,\n          rating,\n          comment\n        });\n      }\n      setRatingStore(null);\n      // Optionally refresh stats or lists here\n    } catch (err) {\n      console.error(\"Error submitting rating:\", err);\n      alert(\"Failed to submit rating. Please try again.\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(AnalyticsCard, {\n        title: \"Total Users\",\n        value: stats.users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnalyticsCard, {\n        title: \"Total Ratings\",\n        value: stats.ratings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnalyticsCard, {\n        title: \"Avg Rating\",\n        value: `${stats.avgRating.toFixed(1)} ⭐`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Stores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StoreList, {\n      endpoint: \"/stores\",\n      canEdit: true,\n      canDelete: true,\n      canRate: true,\n      onEdit: handleEditStore,\n      onRate: handleRateStore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Ratings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RatingList, {\n      endpoint: \"/ratings/admin/all\",\n      canEdit: true,\n      canDelete: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StoreModal, {\n      store: editingStore,\n      name: name,\n      email: email,\n      address: address,\n      setName: setName,\n      setEmail: setEmail,\n      setAddress: setAddress,\n      onSave: handleSaveStore,\n      onClose: () => setEditingStore(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RatingModal, {\n      store: ratingStore,\n      rating: rating,\n      comment: comment,\n      setRating: setRating,\n      setComment: setComment,\n      onSubmit: handleSubmitRating,\n      onClose: () => setRatingStore(null),\n      isUpdating: isUpdatingRating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"+QEzYKWWxTSGV/IonslvMN3vWd0=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","api","AnalyticsCard","RatingList","StoreList","StoreModal","RatingModal","jsxDEV","_jsxDEV","AdminDashboard","_s","stats","setStats","users","ratings","avgRating","loading","setLoading","editingStore","setEditingStore","name","setName","email","setEmail","address","setAddress","ratingStore","setRatingStore","rating","setRating","comment","setComment","isUpdatingRating","setIsUpdatingRating","fetchStats","res","get","data","err","console","error","handleEditStore","store","handleSaveStore","put","id","alert","handleRateStore","handleSubmitRating","post","storeId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","value","toFixed","endpoint","canEdit","canDelete","canRate","onEdit","onRate","onSave","onClose","onSubmit","isUpdating","_c","$RefreshReg$"],"sources":["C:/Assignment_Project_App/Assignment_Roxiler/store-rating-frontend/src/pages/Dashboard/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../../api/api\";\r\nimport AnalyticsCard from \"../../components/AnalyticsCard\";\r\nimport RatingList from \"../../components/RatingList\";\r\nimport StoreList from \"../../components/StoreList\";\r\nimport StoreModal from \"../../components/StoreModal\";\r\nimport RatingModal from \"../../components/RatingModal\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [stats, setStats] = useState({ users: 0, ratings: 0, avgRating: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Store modal state\r\n  const [editingStore, setEditingStore] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  // Rating modal state\r\n  const [ratingStore, setRatingStore] = useState(null);\r\n  const [rating, setRating] = useState(5);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [isUpdatingRating, setIsUpdatingRating] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      try {\r\n        const res = await api.get(\"/dashboard/admin/stats\");\r\n        setStats(res.data.data || { users: 0, ratings: 0, avgRating: 0 });\r\n      } catch (err) {\r\n        console.error(\"Error fetching admin stats:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchStats();\r\n  }, []);\r\n\r\n  // Store handlers\r\n  const handleEditStore = (store) => {\r\n    setEditingStore(store);\r\n    setName(store.name || \"\");\r\n    setEmail(store.email || \"\");\r\n    setAddress(store.address || \"\");\r\n  };\r\n\r\n  const handleSaveStore = async () => {\r\n    try {\r\n      await api.put(`/stores/admin/${editingStore.id}`, {\r\n        name,\r\n        email,\r\n        address,\r\n      });\r\n      setEditingStore(null);\r\n      // Optionally refresh stats or store list here\r\n    } catch (err) {\r\n      console.error(\"Error updating store:\", err);\r\n      alert(\"Failed to update store. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Rating handlers\r\n  const handleRateStore = (store) => {\r\n    setRatingStore(store);\r\n    setRating(5);\r\n    setComment(\"\");\r\n    setIsUpdatingRating(false);\r\n  };\r\n\r\n  const handleSubmitRating = async () => {\r\n    try {\r\n      if (isUpdatingRating) {\r\n        // Implement update rating logic if needed\r\n      } else {\r\n        await api.post(\"/ratings\", {\r\n          storeId: ratingStore.id,\r\n          rating,\r\n          comment,\r\n        });\r\n      }\r\n      setRatingStore(null);\r\n      // Optionally refresh stats or lists here\r\n    } catch (err) {\r\n      console.error(\"Error submitting rating:\", err);\r\n      alert(\"Failed to submit rating. Please try again.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Admin Dashboard</h2>\r\n      <div className=\"analytics-grid\">\r\n        <AnalyticsCard title=\"Total Users\" value={stats.users} />\r\n        <AnalyticsCard title=\"Total Ratings\" value={stats.ratings} />\r\n        <AnalyticsCard title=\"Avg Rating\" value={`${stats.avgRating.toFixed(1)} ⭐`} />\r\n      </div>\r\n\r\n      <h3>All Stores</h3>\r\n      <StoreList\r\n        endpoint=\"/stores\"\r\n        canEdit\r\n        canDelete\r\n        canRate\r\n        onEdit={handleEditStore}\r\n        onRate={handleRateStore}\r\n      />\r\n\r\n      <h3>All Ratings</h3>\r\n      <RatingList endpoint=\"/ratings/admin/all\" canEdit canDelete />\r\n\r\n      <StoreModal\r\n        store={editingStore}\r\n        name={name}\r\n        email={email}\r\n        address={address}\r\n        setName={setName}\r\n        setEmail={setEmail}\r\n        setAddress={setAddress}\r\n        onSave={handleSaveStore}\r\n        onClose={() => setEditingStore(null)}\r\n      />\r\n\r\n      <RatingModal\r\n        store={ratingStore}\r\n        rating={rating}\r\n        comment={comment}\r\n        setRating={setRating}\r\n        setComment={setComment}\r\n        onSubmit={handleSubmitRating}\r\n        onClose={() => setRatingStore(null)}\r\n        isUpdating={isUpdatingRating}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}