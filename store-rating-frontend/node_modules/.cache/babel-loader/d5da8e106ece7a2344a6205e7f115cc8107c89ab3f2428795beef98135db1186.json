{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignment_Project_App\\\\Assignment_Roxiler\\\\store-rating-frontend\\\\src\\\\pages\\\\Stores\\\\StoreList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../api/api\"; // ✅ adjust path if needed\nimport StoreCard from \"./StoreCard\";\nimport { normalizeResponse } from \"../utils/normalizeResponse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreList = ({\n  endpoint = \"/stores\",\n  title = \"Stores\",\n  onEdit,\n  onDelete,\n  onRate\n}) => {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const res = await api.get(endpoint);\n        setStores(normalizeResponse(res));\n      } catch (err) {\n        console.error(`Error fetching stores from ${endpoint}:`, err);\n        setStores([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStores();\n  }, [endpoint]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"store-list\",\n      children: stores.length > 0 ? stores.map(store => /*#__PURE__*/_jsxDEV(StoreCard, {\n        store: store,\n        onEdit: onEdit,\n        onDelete: onDelete,\n        onRate: onRate\n      }, store.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No stores available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreList, \"3xRNw8mL7M78EzDar2q6uneJ+dQ=\");\n_c = StoreList;\nexport default StoreList;\nvar _c;\n$RefreshReg$(_c, \"StoreList\");","map":{"version":3,"names":["React","useEffect","useState","api","StoreCard","normalizeResponse","jsxDEV","_jsxDEV","StoreList","endpoint","title","onEdit","onDelete","onRate","_s","stores","setStores","loading","setLoading","fetchStores","res","get","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","store","id","_c","$RefreshReg$"],"sources":["C:/Assignment_Project_App/Assignment_Roxiler/store-rating-frontend/src/pages/Stores/StoreList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport api from \"../api/api\"; // ✅ adjust path if needed\r\nimport StoreCard from \"./StoreCard\";\r\nimport { normalizeResponse } from \"../utils/normalizeResponse\";\r\n\r\nconst StoreList = ({ endpoint = \"/stores\", title = \"Stores\", onEdit, onDelete, onRate }) => {\r\n  const [stores, setStores] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchStores = async () => {\r\n      try {\r\n        const res = await api.get(endpoint);\r\n        setStores(normalizeResponse(res));\r\n      } catch (err) {\r\n        console.error(`Error fetching stores from ${endpoint}:`, err);\r\n        setStores([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchStores();\r\n  }, [endpoint]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      <div className=\"store-list\">\r\n        {stores.length > 0 ? (\r\n          stores.map((store) => (\r\n            <StoreCard\r\n              key={store.id}\r\n              store={store}\r\n              onEdit={onEdit}\r\n              onDelete={onDelete}\r\n              onRate={onRate}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No stores available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,YAAY,CAAC,CAAC;AAC9B,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,iBAAiB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ,GAAG,SAAS;EAAEC,KAAK,GAAG,QAAQ;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC1F,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMjB,GAAG,CAACkB,GAAG,CAACZ,QAAQ,CAAC;QACnCO,SAAS,CAACX,iBAAiB,CAACe,GAAG,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,8BAA8Bf,QAAQ,GAAG,EAAEa,GAAG,CAAC;QAC7DN,SAAS,CAAC,EAAE,CAAC;MACf,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,IAAIQ,OAAO,EAAE,oBAAOV,OAAA;IAAAkB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzC,oBACEtB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAKf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBtB,OAAA;MAAKuB,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBV,MAAM,CAACgB,MAAM,GAAG,CAAC,GAChBhB,MAAM,CAACiB,GAAG,CAAEC,KAAK,iBACf1B,OAAA,CAACH,SAAS;QAER6B,KAAK,EAAEA,KAAM;QACbtB,MAAM,EAAEA,MAAO;QACfC,QAAQ,EAAEA,QAAS;QACnBC,MAAM,EAAEA;MAAO,GAJVoB,KAAK,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACF,CAAC,gBAEFtB,OAAA;QAAAkB,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC1B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAzCIN,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}